ngClass/src/app/app.component.html
directives
<p> {{title}} </p>

<div class='card'>
  <div class='card-header'>
    <p>Simple example of ngClass </p>
  </div>
  <div class="card-body">

    <div class="row">
      <div [ngClass]="'red size20'">
        Red Text with Size 20px : as string
      </div>
    </div>

    <!-- This also works. -->
    <div class="row">
      <div ngClass='red size20'>
        Red Text with Size 20px : as string
      </div>
    </div>

    <div class="row">
      <div [ngClass]="['red','size20']">
        Red Text with Size 20px : as array
      </div>
    </div>


    <div class="row">
      <div [ngClass]="{'red':true,'size20':true}">
        Red Text with Size 20px : as object
      </div>
    </div>


    <!-- Getting Data from Component. You can modify the CSS From the component -->
    <div class="row">
      <div [ngClass]="cssStringVar">
        Red Text with Size 20px : from component
      </div>
    </div>

    <div class="row">
      <div [ngClass]="cssClass">
        Red Text with Size 20px : from component as object
      </div>
    </div>

  </div>
</div>
======================
app.component.css
.red {
  color: red;
}

.size20 {
  font-size: 20px;
}


.card { margin: 20px;}
========================================
import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})


export class AppComponent
{
    title: string = 'ngClass Example' ;
    cssStringVar: string= 'red size20';
    cssClass: CssClass = new CssClass();
}

class CssClass {
  red: boolean= true;
  size20: boolean= true;
}
================================
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';


import { AppComponent } from './app.component';

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,FormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
==========================

ngFor demo
.even { background-color: azure; }
.odd { background-color: floralwhite; }


.first { background-color: azure; }
.last { background-color: floralwhite; }


.card { margin: 20px;}
Footer
============================
app.component.html
<h1> {{title}} </h1>



<!-- ngFor Example with List -->

<ul>
  <li *ngFor="let movie of movies">
    {{ movie.title }} - {{movie.director}}
  </li>
</ul>



<!-- ngFor Example with Table -->

<div class='card'>
  <div class="card-header">
    <p>Simple example of ngFor </p>
  </div>

  <div class='table-responsive'>
    <table class='table table-bordered table-sm '>
      <thead class="thead-dark">
        <tr>
          <th>Title</th>
          <th>Director</th>
          <th>Cast</th>
          <th>Release Date</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let movie of movies;">
          <td>{{movie.title}}</td>
          <td>{{movie.director}}</td>
          <td>{{movie.cast}}</td>
          <td>{{movie.releaseDate}}</td>
        </tr>
      </tbody>
    </table>

  </div>

</div>




<!-- ngFor Example with index  -->

<div class='card'>

  <div class='card-header'>
    <p>ngFor Example with index</p>
  </div>

  <div class='table-responsive'>
    <table class='table table-bordered table-sm '>
      <thead class="thead-dark">
        <tr>
          <th>Index</th>
          <th>Title</th>
          <th>Director</th>
          <th>Cast</th>
          <th>Release Date</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let movie of movies; let i=index;">
          <td> {{i}} </td>
          <td>{{movie.title}}</td>
          <td>{{movie.director}}</td>
          <td>{{movie.cast}}</td>
          <td>{{movie.releaseDate}}</td>
        </tr>
      </tbody>
    </table>
  </div>

</div>


<!-- Odd & Even row formatting -->


<div class='card'>
  <div class='card-header'>
    <p>Odd & even row formatting</p>
  </div>

  <div class='table-responsive'>
    <table class='table table-bordered table-sm '>
      <thead class="thead-dark">
        <tr>
          <th>Index</th>
          <th>Title</th>
          <th>Director</th>
          <th>Cast</th>
          <th>Release Date</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let movie of movies; let i=index; let o= odd; let e=even;" [ngClass]="{ odd: o, even: e }">
          <td> {{i}} </td>
          <td>{{movie.title}}</td>
          <td>{{movie.director}}</td>
          <td>{{movie.cast}}</td>
          <td>{{movie.releaseDate}}</td>
        </tr>
      </tbody>
    </table>
  </div>
</div>



<!-- First & Last Element Styling -->

<div class='card'>
  <div class='card-header'>
    <p>First & Last Element styling</p>
  </div>

  <div class='table-responsive'>
    <table class='table table-bordered table-sm '>
      <thead class="thead-dark">
        <tr>
          <th>Index</th>
          <th>Title</th>
          <th>Director</th>
          <th>Cast</th>
          <th>Release Date</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let movie of movies; let i=index; let first= first; let last=last;"
          [ngClass]="{ first: first, last: last }">
          <td> {{i}} </td>
          <td>{{movie.title}}</td>
          <td>{{movie.director}}</td>
          <td>{{movie.cast}}</td>
          <td>{{movie.releaseDate}}</td>
        </tr>
      </tbody>
    </table>
  </div>
</div>


<!-- Nested Array -->

<div class='card'>
  <div class='card-header'>
    <p>Nested Array</p>
  </div>

  <div class='table-responsive'>
    <table class='table table-bordered table-sm '>
      <thead class="thead-dark">
        <tr>
          <th>Name</th>
          <th>Mail</th>
          <th>Skills</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let employee of employees;">
          <td>{{employee.name}}</td>
          <td>{{employee.email}}</td>
          <td>
            <table class='table table-sm '>
              <tbody>
                <tr *ngFor="let skill of employee.skills;">
                  <td>{{skill.skill}}</td>
                  <td>{{skill.exp}}</td>
                </tr>
              </tbody>
            </table>

          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>




<!-- Trackby -->


<div class='card'>
  <div class='card-header'>
    <p>Using Trackby</p>
  </div>

  <div class='table-responsive'>
    <table class='table table-bordered table-sm '>
      <thead class="thead-dark">
        <tr>
          <th>Title</th>
          <th>Director</th>
          <th>Cast</th>
          <th>Release Date</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let movie of movies; trackBy:trackByTitle;">
          <td>{{movie.title}}</td>
          <td>{{movie.director}}</td>
          <td>{{movie.cast}}</td>
          <td>{{movie.releaseDate}}</td>
        </tr>
      </tbody>
    </table>


  </div>
</div>

<!-- Trackby Multiple Columns -->

<div class='card'>
  <div class='card-header'>
    <p>Using Trackby Multiple Identity</p>
  </div>

  <div class='table-responsive'>
    <table class='table table-bordered table-sm '>
      <thead class="thead-dark">
        <tr>
          <th>Title</th>
          <th>Director</th>
          <th>Cast</th>
          <th>Release Date</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let movie of movies; trackBy:CompositeKey;">
          <td>{{movie.title}}</td>
          <td>{{movie.director}}</td>
          <td>{{movie.cast}}</td>
          <td>{{movie.releaseDate}}</td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
==========================
app.component.ts
import { Component, ɵAPP_ID_RANDOM_PROVIDER } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title: string = "Top 5 Movies";

  movies: Movie[] = [

    { title: 'Zootopia', director: 'Byron Howard, Rich Moore', cast: 'Idris Elba, Ginnifer Goodwin, Jason Bateman', releaseDate: 'March 4, 2016' },
    { title: 'Batman v Superman: Dawn of Justice', director: 'Zack Snyder', cast: 'Ben Affleck, Henry Cavill, Amy Adams', releaseDate: 'March 25, 2016' },
    { title: 'Captain American: Civil War', director: 'Anthony Russo, Joe Russo', cast: 'Scarlett Johansson, Elizabeth Olsen, Chris Evans', releaseDate: 'May 6, 2016' },
    { title: 'X-Men: Apocalypse', director: 'Bryan Singer', cast: 'Jennifer Lawrence, Olivia Munn, Oscar Isaac', releaseDate: 'May 27, 2016' },
    { title: 'Warcraft', director: 'Duncan Jones', cast: 'Travis Fimmel, Robert Kazinsky, Ben Foster', releaseDate: 'June 10, 2016' },

  ]

  employees = [
    {
      name: "Rahul", email: "rahul@gmail.com",
      skills: [{ skill: 'Angular', exp: '2' },{ skill: 'Javascript', exp: '7' },{ skill: 'TypeScript', exp: '3' }
      ]
    },
    {
      name: "Sachin", email: "sachin@gmail.com",
      skills: [{ skill: 'Angular', exp: '1' },{ skill: 'Android', exp: '3' },{ skill: 'React', exp: '2' }
      ]
    },
    {
      name: "Laxmna", email: "laxman@gmail.com",
      skills: [{ skill: 'HTML', exp: '2' },{ skill: 'CSS', exp: '2' },{ skill: 'Javascript', exp: '1' }
      ]
    }
  ]


  trackByTitle(index, item) {
    return item.title;
  }


  CompositeKey(index, item) {
    return item.title + item.director;
  }


}

class Movie {

  title: string;
  director: string;
  cast: string;
  releaseDate: string;

}
=================================
app.module.ts
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';

import { AppComponent } from './app.component';

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
=======================================
ngForTrackbY
app.component.css
.even { background-color: azure; }
.odd { background-color: floralwhite; }


.first { background-color: azure; }
.last { background-color: floralwhite; }


.card { margin: 20px;}
=====================
<!-- 
<div *ngFor="let item of items; let i=index">
  <input [(ngModel)]="item" name="item{{i}}"> <button (click)="removeItem(i)">remove</button>
</div>
Item  : <input type="text" [(ngModel)]="mItem"> 
<button  (click)="addItem()">Add</button> --> -->






<h1> {{title}} </h1>


<ul>
  <li *ngFor="let movie of movies; let i=index;trackBy:trackByFn;">
    {{i}}. {{ movie.title }} - {{movie.director}} <button (click)="remove(i)">remove</button>
  </li>
</ul>

<button (click)="Refresh()">Refresh</button> <br>

Title     : <input type="text" [(ngModel)]="mTitle"> 
Director  : <input type="text" [(ngModel)]="mDirector"> 
<button  (click)="addMovie()">Add</button> 




<!--trackBy: trackByFn;  -->
=============================
app.component.ts

import { Component, ɵAPP_ID_RANDOM_PROVIDER, OnInit } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css'],
})
export class AppComponent implements OnInit {

  items=[];
  mItem="";
  
  removeItem(i) {
    this.items.splice(i,1);
  }

  addItem() {
    this.items.push(this.mItem)
    this.mItem=""
  }


  title: string = "Top 5 Movies";
  
  movies=[];
  

  mTitle:string="";
  mDirector:string="";


  ngOnInit() {
    this.Refresh();
  }

  remove(i) {
    this.movies.splice(i,1);
  }

  addMovie() {
    this.movies.push({ title: this.mTitle, director: this.mDirector})
    this.mTitle=""
    this.mDirector=""
  }


  Refresh() {
    console.log("refresh")
    this.movies = [
      { title: 'Zootopia', director: 'Byron Howard, Rich Moore'},
      { title: 'Batman v Superman: Dawn of Justice', director: 'Zack Snyder'},
      { title: 'Captain American: Civil War', director: 'Anthony Russo, Joe Russo'},
      { title: 'X-Men: Apocalypse', director: 'Bryan Singer'},
      { title: 'Warcraft', director: 'Duncan Jones'},
    ]

    this.items=[
      "PC","Laptop","Mobile","Monitor"
    ];
  }

  trackByFn(index, item) {
    return item.title;
  }

  trackByFnMultipleFields(index, item) {
    return item.title + item.director;
  }
}

class Movie {
  title: string;
  director: string;
}
=============================
